name: Reusable workflow to fetch JSON-LD data.

on:
  workflow_call:
    outputs:
      commit-hash:
        value: ${{jobs.fetch-and-commit-data.outputs.commit-hash}}
    inputs:
      page_url:
        required: true
        type: string
      entity_identifier:
        required: true
        type: string
      file_name:
        required: true
        type: string
      is_paginated:
        description: "Whether the page is paginated or not, set as 'true', 'false' or a number as start page for crawl"
        required: true
        type: string
      headless:
        required: true
        type: string
      save_method:
        description: "choices: S3 | artifact, keeping this empty will commit the file to the repository"
        required: false
        type: string


jobs:
  fetch-and-commit-data:
    runs-on: ubuntu-latest
    outputs:
      commit-hash: ${{ steps.get_commit_hash.outputs.commit-hash }}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with: 
        repository: culturecreates/artsdata-orion
        ref: main
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
    - name: Run Main Script
      run: |
        bundle exec ruby src/main.rb \
        "${{ inputs.page_url }}" \
        "${{ inputs.entity_identifier }}" \
        output/${{ inputs.file_name }} \
        ${{ inputs.is_paginated}} \
        ${{ inputs.headless}}

    - name: Save file as artifact
      if: ${{ inputs.save_method == 'artifact' }}
      uses: actions/upload-artifact@v4
      with:
        name: jsonld-data
        path: output/

    - name: Commit and Push Changes
      if: ${{ inputs.save_method == '' }}
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Actions"
        git pull
        git add "output/${{ inputs.file_name }}"
        git commit -m "Add data generated by the script"
        git push

    - name: Get commit hash
      id: get_commit_hash
      if: ${{ inputs.save_method == '' }}
      run: |
        commit_hash=$(git rev-parse HEAD)
        echo "commit-hash=$commit_hash" >> $GITHUB_OUTPUT     
    
